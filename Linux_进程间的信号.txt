Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2017-02-10T16:50:39+08:00

====== Linux 进程间的信号 ======
Created 星期五 10 二月 2017

=== 进程对信号的三种响应动作： ===
	1，忽略信号（不能忽略SIGKILL(9号)、SIGSTOP，同时也不能捕获）
	2.捕获并处理信号
	3.执行默认操作

	sigaction和signal函数，都是调用内核服务do_signal函数；
内核服务函数（应用系统无法调用的函数）

=== 信号在Linux中的传递过程 ===
	1.执行信号的处理动作称为信号递达
	2.信号从产生到递达之间的状态称为信号未决
	**注意：阻塞和忽略是不同的，只要信号被阻塞就不会递达，而忽略是抵达之后可选的一种处理动作。**
	
	PCB进程控制块中结构体中含有信号屏蔽状态字，信号未决状态字还有是否忽略标志
	信号屏蔽状态字，1代表阻塞、0代表不阻塞；
	信号未决状态字的1代表未决，0代表信号可以递达了
	


=== 信号的高级用法 ===
	sigaction函数注册信号处理函数
	
	**功能：sigaction函数用于改变进程接收到特定信号后的行为**
	
	**原型： int sigaction（int signum，const struct sigaction* act,const struct sigaction *old）**
	
	**参数：**
		1.该函数的第一个参数为信号的值，除了SIGKILL及SIGSTOP外的任何一个特定有效的信号
		2.第二个参数是指向结构提sigaction的一个实例的指针，在结构sigaction的实例中，制定了对特定信号的处理，可以为空，进程会以缺省方式对信号处理
		3.第三个参数指向的对象用来保存 原来相信信号的处理，可为NULL
	
	**返回值：**
		函数成功返回0，失败返回-1
		






























